/*
1.auto 关键字
1．如果auto声明的变量是按值初始化，则推导出的类型会忽略
cv限定符。进一步解释为，在使用auto声明变量时，既没有使用引
用，也没有使用指针，那么编译器在推导的时候会忽略const和
volatile限定符。
2．使用auto声明变量初始化时，目标对象如果是引用，则引用
属性会被忽略：
3．使用auto和万能引用声明变量时（见第6章），对于左值会将
auto推导为引用类型：
4．使用auto声明变量，如果目标对象是一个数组或者函数，则
auto会被推导为对应的指针类型
5．当auto关键字与列表初始化组合时，这里的规则有新老两个
版本，这里只介绍新规则（C++17标准）。
（1）直接使用列表初始化，列表中必须为单元素，否则无法编
译，auto类型被推导为单元素的类型。
（2）用等号加列表初始化，列表中可以包含单个或者多个元素，
auto类型被推导为std::initializer_list<T>，其中T是元素类
型。请注意，在列表中包含多个元素的时候，元素的类型必须相同，
否则编译器会报错。

3.7 总结
auto占位符是现代C++中非常重要的特性，它能让代码变得更加
简洁，从而减少编码的时间，与此同时，它还可以配合一些其他特
性，让代码更加接近现代编程语言的风格。另外，本章虽然介绍了很
多auto占位符的特性，但事实上还有一些并未提及，因为它们涉及另
外一个重要的关键字decltype。我们将会在后面的章节做详细讨
论。



*/
////////////////////////////////////////////////////////////////////////////////////////
#include<iostream>


using std::cout;
using std::endl;


//1.
void test1();

//2. 
void test2();


int main(){
    return 0;
}